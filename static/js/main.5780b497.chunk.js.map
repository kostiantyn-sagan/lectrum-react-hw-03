{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.js","api.js","components/ImageGallery/ImageGallery.js","components/ImageGallery/useApiLoader.js","App.js","index.js","components/ImageGallery/ImageGallery.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css"],"names":["ImageGalleryItem","webformatURL","tags","className","s","src","alt","ImageGalleryItemImage","searchParams","uri","api","news","fetch","a","response","status","Error","json","hits","ImageGallery","useState","db","setDb","isFetching","setFetching","isClientError","setClientError","isServerError","setServerError","useEffect","images","message","useApiLoader","ImageGalleryJSX","map","id","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iPAWeA,EARU,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,KACxC,OACE,oBAAIC,UAAWC,IAAEJ,iBAAjB,SACE,qBAAKK,IAAKJ,EAAcK,IAAKJ,EAAMC,UAAWC,IAAEG,2B,sCCJhDC,EAAY,+BADN,qCACM,wDAEZC,EAAG,UAJI,4BAIJ,OAAaD,GAETE,EAAM,CACjBC,KAAM,CACJC,MAAM,SAAD,mGAAC,CAAD,sBAAE,gCAAAC,EAAA,sEACkBD,MAAMH,GADxB,aACCK,EADD,QAGQC,QAAU,KAAOD,EAASC,OAAS,KAH3C,sBAIG,IAAIC,MAAM,iHAJb,YAODF,EAASC,QAAU,KAPlB,sBAQG,IAAIC,MAAM,sGARb,uBAWkBF,EAASG,OAX3B,uBAWGC,EAXH,EAWGA,KAXH,kBAaEA,GAbF,+CCkBIC,EArBM,WACnB,MCH0B,WAC1B,MAAoBC,mBAAS,IAA7B,mBAAOC,EAAP,KAAWC,EAAX,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAwCJ,oBAAS,GAAjD,mBAAOK,EAAP,KAAsBC,EAAtB,KACA,EAAwCN,oBAAS,GAAjD,mBAAOO,EAAP,KAAsBC,EAAtB,KA0BA,OAxBAC,qBAAU,WACRL,GAAY,KACX,IAEHK,qBAAU,WACR,sBAAC,8BAAAhB,EAAA,+EAEwBH,EAAIC,KAAKC,QAFjC,OAESkB,EAFT,OAGGN,GAAY,GACZF,GAAM,SAAAD,GAAE,4BAAQA,GAAR,YAAeS,OAJ1B,gDAKYC,EALZ,KAKYA,QACTP,GAAY,GAEI,kHAAZO,GACFL,GAAe,GAGD,uGAAZK,GACFH,GAAe,GAbpB,wDAAD,KAiBC,IAEI,CAAEP,KAAIE,aAAYI,gBAAeF,iBD3BiBO,GAAjDX,EAAR,EAAQA,GAAIE,EAAZ,EAAYA,WAAYE,EAAxB,EAAwBA,cAAeE,EAAvC,EAAuCA,cACjCM,EAAkBZ,EAAGa,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIlC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,KAClD,OACE,cAAC,EAAD,CAA2BD,aAAcA,EAAcC,KAAMA,GAAtCiC,MAI3B,OACE,0BAAShC,UAAWC,IAAEgC,IAAtB,UACE,8CACCb,GAAc,sHACdE,GAAiB,8IACjBE,GAAiB,oIAChBA,IAAkBF,GAClB,oBAAItB,UAAWC,IAAEe,aAAjB,SAAgCc,QEbzBG,MAJf,WACE,OAAO,cAAC,EAAD,KCCTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,IAAM,0BAA0B,aAAe,qC,kBCAjED,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,sBAAwB,mD","file":"static/js/main.5780b497.chunk.js","sourcesContent":["import React from 'react';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ webformatURL, tags }) => {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img src={webformatURL} alt={tags} className={s.ImageGalleryItemImage} />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n","const base = 'https://pixabay.com/api/';\nconst key = '19475707-408c9466706baaa6817e821a9';\nconst searchParams = `?q=forest&page=1&key=${key}&image_type=photo&orientation=horizontal&per_page=12`;\n\nconst uri = `${base}${searchParams}`;\n\nexport const api = {\n  news: {\n    fetch: async () => {\n      const response = await fetch(uri);\n\n      if (response.status >= 400 && response.status < 500) {\n        throw new Error('Неправильный запрос');\n      }\n\n      if (response.status >= 500) {\n        throw new Error('Сервер не отвечает');\n      }\n\n      const { hits } = await response.json();\n\n      return hits;\n    },\n  },\n};\n","import React from 'react';\nimport s from './ImageGallery.module.css';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport { useApiLoader } from './useApiLoader';\n\nconst ImageGallery = () => {\n  const { db, isFetching, isClientError, isServerError } = useApiLoader();\n  const ImageGalleryJSX = db.map(({ id, webformatURL, tags }) => {\n    return (\n      <ImageGalleryItem key={id} webformatURL={webformatURL} tags={tags} />\n    );\n  });\n\n  return (\n    <section className={s.App}>\n      <h2>ImageGallery</h2>\n      {isFetching && <p>Загрузка данных</p>}\n      {isClientError && <p>Неправильный запрос</p>}\n      {isServerError && <p>Сервер не отвечает</p>}\n      {!isServerError && !isClientError && (\n        <ul className={s.ImageGallery}>{ImageGalleryJSX}</ul>\n      )}\n    </section>\n  );\n};\n\nexport default ImageGallery;\n","import { useEffect, useState } from 'react';\nimport { api } from '../../api';\n\nexport const useApiLoader = () => {\n  const [db, setDb] = useState([]);\n  const [isFetching, setFetching] = useState(false);\n  const [isClientError, setClientError] = useState(false);\n  const [isServerError, setServerError] = useState(false);\n\n  useEffect(() => {\n    setFetching(true);\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const images = await api.news.fetch();\n        setFetching(false);\n        setDb(db => [...db, ...images]);\n      } catch ({ message }) {\n        setFetching(false);\n\n        if (message === 'Неправильный запрос') {\n          setClientError(true);\n        }\n\n        if (message === 'Сервер не отвечает') {\n          setServerError(true);\n        }\n      }\n    })();\n  }, []);\n\n  return { db, isFetching, isServerError, isClientError };\n};\n","import React from 'react';\nimport ImageGallery from './components/ImageGallery';\n\nfunction App() {\n  return <ImageGallery />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"ImageGallery_App__3yeb-\",\"ImageGallery\":\"ImageGallery_ImageGallery__1-pNU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1eq6i\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__RFFTf\"};"],"sourceRoot":""}